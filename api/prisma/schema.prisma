datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Pokemon {
  id       String  @id @unique @default(uuid())
  name     String
  height   Float?
  weight   Float?
  category String?

  sprite String?

  userId String?
  user   User?   @relation(fields: [userId], references: [id])

  types      PokemonType[]
  abilities  PokemonAbility[]
  evolutions PokemonEvolution[]
  stats      PokemonStat[]
  genders    PokemonGender[]

  @@map("pokemons")
  @@unique([name, userId])
}

model PokemonGender {
  id        Int     @id @default(autoincrement())
  gender    String
  pokemonId String
  pokemon   Pokemon @relation(fields: [pokemonId], references: [id])

  @@map("pokemon_genders")
}

model PokemonType {
  id        Int     @id @default(autoincrement())
  type      String
  pokemonId String
  pokemon   Pokemon @relation(fields: [pokemonId], references: [id])

  @@map("pokemon_types")
}

model PokemonAbility {
  id        Int     @id @default(autoincrement())
  ability   String
  pokemonId String
  pokemon   Pokemon @relation(fields: [pokemonId], references: [id])

  @@map("pokemon_abilities")
}

model PokemonEvolution {
  id        Int     @id @default(autoincrement())
  evolution      String
  pokemonId String
  pokemon   Pokemon @relation(fields: [pokemonId], references: [id])

  @@map("pokemon_evolutions")
}

model PokemonStat {
  id        Int     @id @default(autoincrement())
  statName  String
  value     Int
  pokemonId String
  pokemon   Pokemon @relation(fields: [pokemonId], references: [id])

  @@map("pokemon_stats")
}

model User {
  id       String @id @unique @default(uuid())
  username String @unique
  password String

  pokemons  Pokemon[]
  favorites Favorite[]
}

model Favorite {
  id        Int    @id @default(autoincrement())
  userId    String
  pokemonId String

  user User @relation(fields: [userId], references: [id])

  @@unique([userId, pokemonId])
}
